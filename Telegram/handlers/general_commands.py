from os import environ
from aiogram import types
from aiogram.utils.markdown import text, bold
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, ParseMode

from DataBase import *

from ..telegram import dp
from ..keyboards_stickers import *

from .. import states

root_path = environ.get("ROOT_DIR")
data_folder = environ.get("DATA_DIR")


# START COMMAND
@dp.message_handler(commands=['start'])
async def process_start_command(message: types.Message):
    chat_id = message.chat.id
    user = message.from_user

    db.add_tg_chat(chat_id, user.first_name, user.last_name,
                   user.username, user.language_code)

    await message.answer_sticker(HELLO_DOG_STICKER)
    await message.answer("""–ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ –±–æ—Ç –¥–ª—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ –∫–∞–Ω–∞–ª–æ–≤ Twitch! üòá
        –ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –ø–æ–¥—Ä–æ–±–Ω—ã–π —Å–ø–∏—Å–æ–∫ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π
        –≤—ã –º–æ–∂–µ—Ç–µ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –∫–æ–º–∞–Ω–¥–æ–π /help
        –∏–ª–∏ –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É –Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ
    """, reply_markup=start_keyboard)


# HELP COMMAND
@dp.message_handler(commands=['help'])
@dp.message_handler(text=show_info_button.text)
async def process_start_command(message: types.Message):
    await message.answer_sticker(HMM_DOG_STICKER)
    await message.answer("""–ë–æ—Ç –ø–æ–∑–≤–æ–ª—è–µ—Ç —Å–ª–µ–¥–∏—Ç—å –∑–∞ –∫–∞–Ω–∞–ª–∞–º–∏ TWITCH
    –î–ª—è –Ω–∞—á–∞–ª–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–∞–Ω–∞–ª. /sub        
        –ù—É–∂–Ω–æ –±—É–¥–µ—Ç –≤–≤–µ—Å—Ç–∏ –∏–º—è –∫–∞–Ω–∞–ª–∞, –Ω–∞ –∫–æ—Ç–æ—Ä—ã–π –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è
    –ü–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ —á–∞—Ç–∞, –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∑—Ä–∏—Ç–µ–ª–µ–π –∏ –¥—Ä—É–≥–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
    –¢–∞–∫ –∂–µ –ø—Ä–∏ –∂–µ–ª–∞–Ω–∏–∏ –æ—Ç –∫–∞–Ω–∞–ª–∞ –º–æ–∂–Ω–æ –æ—Ç–ø–∏—Å–∞—Ç—å—Å—è. /unsub        

    –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–∞–Ω–∞–ª–µ –Ω–µ–æ–±–æ—Ö–æ–¥–∏–º–æ –æ—Ç–∫—Ä—ã—Ç—å —Å–ø–∏—Å–æ–∫ –ø–æ–¥–ø–∏—Å–æ–∫ /mysubs –∏ –≤—ã–±—Ä–∞—Ç—å –∫–∞–Ω–∞–ª, —Ç–∏–ø –ø–æ–ª—É—á–∞–µ–º—ã—Ö –¥–∞–Ω–Ω—ã—Ö

    """, reply_markup=start_keyboard)


# SUBSCRIBE COMMAND
@dp.message_handler(commands=['sub'])
@dp.message_handler(text=subscribe_button.text)
async def process_subscribe_command(message: types.Message):
    db.set_state_for_tg_chat(message.chat.id, states.SUBSCRIBING)

    resp_text = text('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ',
                     bold('–∏–º—è –∫–∞–Ω–∞–ª–∞'),
                     '–Ω–∞ –∫–æ—Ç–æ—Ä—ã–π –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è'
                     )
    await message.answer(resp_text, parse_mode=ParseMode.MARKDOWN)


# UNSUBSCRIBE COMMAND
@dp.message_handler(commands=['unsub'])
@dp.message_handler(text=unsubscribe_button.text)
async def process_unsubscribe_command(message: types.Message):
    db.set_state_for_tg_chat(message.chat.id, states.UNSUBSCRIBING)
    resp_text = text('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ',
                     bold('–∏–º—è –∫–∞–Ω–∞–ª–∞'),
                     '–æ—Ç –∫–æ—Ç–æ—Ä–æ–≥–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –æ—Ç–ø–∏—Å–∞—Ç—å—Å—è'
                     )
    await message.answer(resp_text, parse_mode=ParseMode.MARKDOWN)


# MYSUB COMMAND
@dp.message_handler(commands=['mysubs'])
@dp.message_handler(text=my_subs_button.text)
async def process_mysub_list_command(message: types.Message):
    channels_data = db.get_subscribed_channels(message.chat.id)
    if not channels_data:
        await message.answer('–í—ã –Ω–µ –±—ã–ª–∏ –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∏ –Ω–∞ –æ–¥–∏–Ω –∫–∞–Ω–∞–ª')
        return

    subs_keyboard = InlineKeyboardMarkup(row_width=4)
    for row in channels_data:
        channel_name = row[0]
        btn = InlineKeyboardButton(channel_name, callback_data=f'channel:{channel_name}')
        subs_keyboard.insert(btn)

    await message.answer('–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞–Ω–∞–ª –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è', reply_markup=subs_keyboard)
